Index: changes.diff
===================================================================
--- changes.diff	(Revision 70)
+++ changes.diff	(Arbeitskopie)
@@ -1,149 +0,0 @@
-Index: code/game/g_local.h
-===================================================================
---- code/game/g_local.h	(Revision 69)
-+++ code/game/g_local.h	(Arbeitskopie)
-@@ -322,6 +322,8 @@
- 
- 	int			campCounter;
- 	vec3_t		campPosition;
-+
-+	int			lifeShards;
- 	/* end beryllium */
- } clientPersistant_t;
- 
-Index: code/game/g_main.c
-===================================================================
---- code/game/g_main.c	(Revision 69)
-+++ code/game/g_main.c	(Arbeitskopie)
-@@ -107,6 +107,8 @@
- 
- vmCvar_t	be_campDistance;
- 
-+vmCvar_t	be_oneUp;
-+
- /* end beryllium */
- 
- 
-@@ -229,8 +231,10 @@
- 
- 	{ &be_maxConnections, "be_maxConnections", "0", CVAR_ARCHIVE, 0, qfalse },
- 
--	{ &be_campDistance, "be_campDistance", "0", CVAR_ARCHIVE, 0, qfalse }
-+	{ &be_campDistance, "be_campDistance", "0", CVAR_ARCHIVE, 0, qfalse },
- 
-+	{ &be_oneUp, "be_oneUp", "0", CVAR_ARCHIVE, 0, qfalse }
-+
- 	/* end beryllium */
- };
- 
-Index: code/game/g_beryllium.c
-===================================================================
---- code/game/g_beryllium.c	(Revision 69)
-+++ code/game/g_beryllium.c	(Arbeitskopie)
-@@ -342,3 +342,52 @@
- 	}
- }
- 
-+
-+/* Called at the end of ClientBegin() but before ranks are calculated */
-+void BE_ClientBegin( int clientNum ) {
-+	gentity_t *ent;
-+
-+	/* FIXME: assert() */
-+	ent = &g_entities[ clientNum ];
-+
-+	ent->client->pers.lifeShards = 0;
-+}
-+
-+
-+/* Called before client tosses items while being killed */
-+void BE_ClientKilled( gentity_t *self ) {
-+	gentity_t	*killer_ent;
-+	gclient_t	*killer;
-+	int			numShards, neededShards;
-+
-+	/* FIXME: assert() */
-+
-+	if ( ( GT_LPS != g_gametype.integer ) || !be_oneUp.integer ) {
-+		return;
-+	}
-+
-+	if ( level.warmupTime ) {
-+		return;
-+	}
-+
-+	killer_ent = &g_entities[self->client->lasthurt_client];
-+		
-+	if ( killer_ent->client ) {
-+		killer = killer_ent->client;
-+		killer->pers.lifeShards++;
-+
-+		numShards		= killer->pers.lifeShards;
-+		neededShards	= be_oneUp.integer;
-+		if ( numShards >= neededShards ) {
-+			killer->sess.livesleft++;
-+			killer->pers.lifeShards = 0;
-+			CalculateRanks();
-+
-+			SendClientCommand( CID_ALL, CCMD_PRINT, va( "%s gained an extra life!\n", killer->pers.netname ) );
-+		}
-+		else {
-+			SendClientCommand( ( killer_ent - g_entities ), CCMD_PRINT, va( "You gained a life shard ( %i of %i ).\n", numShards, neededShards ) );
-+		}
-+	}
-+}
-+
-Index: code/game/g_beryllium.h
-===================================================================
---- code/game/g_beryllium.h	(Revision 69)
-+++ code/game/g_beryllium.h	(Arbeitskopie)
-@@ -74,7 +74,9 @@
- 
- extern vmCvar_t	be_campDistance;
- 
-+extern vmCvar_t	be_oneUp;
- 
-+
- extern void G_Say( gentity_t *ent, gentity_t *target, int mode, const char *chatText );
- extern char *ConcatArgs( int start ); /* FIXME: Add these to game headers? Declared in g_cmds.c */
- 
-@@ -91,6 +93,9 @@
- 
- void BE_ClientTimerActions( gentity_t* ent );
- 
-+void BE_ClientBegin( int clientNum );
-+void BE_ClientKilled( gentity_t *self );
- 
-+
- #endif
- 
-Index: code/game/g_combat.c
-===================================================================
---- code/game/g_combat.c	(Revision 69)
-+++ code/game/g_combat.c	(Arbeitskopie)
-@@ -545,6 +545,10 @@
- 		}
- 	}
- 
-+	/* added beryllium */
-+	BE_ClientKilled( self );
-+	/* end added */
-+
- 	// if client is in a nodrop area, don't drop anything (but return CTF flags!)
- 	contents = trap_PointContents( self->r.currentOrigin, -1 );
- 	if ( !( contents & CONTENTS_NODROP ) && !level.cammode ) {
-Index: code/game/g_client.c
-===================================================================
---- code/game/g_client.c	(Revision 69)
-+++ code/game/g_client.c	(Arbeitskopie)
-@@ -1182,6 +1182,10 @@
- 	}
- 	G_LogPrintf( "ClientBegin: %i\n", clientNum );
- 
-+	/* added beryllium */
-+	BE_ClientBegin( clientNum );
-+	/* end added */
-+
- 	// count current clients and rank for scoreboard
- 	CalculateRanks();
- 
Index: README
===================================================================
--- README	(Revision 70)
+++ README	(Arbeitskopie)
@@ -153,7 +153,7 @@
 
    .: Versions :.
 
-   This README applies to the current version of Beryllium, which is 0.07b-r69.
+   This README applies to the current version of Beryllium, which is 0.08a-r71.
    The code bases upon World of Padman's v1.5 gamecode and is thus only compatible
    with this version of the game. Due to its generic nature, it could also be applied
    to other versions or even other ioquake3 based games though.
Index: code/game/g_main.c
===================================================================
--- code/game/g_main.c	(Revision 70)
+++ code/game/g_main.c	(Arbeitskopie)
@@ -206,7 +206,7 @@
 
 	{ &be_version, "be_version", BERYLLIUM_VERSION, ( CVAR_SERVERINFO | CVAR_ROM ), 0, qfalse },
 	/* NOTE: This is meant to allow identification of codebase and thus compatibility. */
-	{ &g_version, "g_version", "wop 1.5_SVN1863", ( CVAR_SERVERINFO | CVAR_ROM ), 0, qfalse },
+	{ &g_version, "g_version", "wop 1.5_SVN1897", ( CVAR_SERVERINFO | CVAR_ROM ), 0, qfalse },
 
 	/* FIXME: Use proper g_ instead of be_ prefix? */
 	{ &be_voteDuration, "be_voteDuration", "30", CVAR_ARCHIVE, 0, qfalse },
Index: code/game/g_client.c
===================================================================
--- code/game/g_client.c	(Revision 70)
+++ code/game/g_client.c	(Arbeitskopie)
@@ -714,7 +714,13 @@
 static void ClientCleanName(const char *in, char *out, int outSize)
 {
 	int outpos = 0, colorlessLen = 0, spaces = 0;
+	/* added beryllium */
+	int			totalWhitespace = 0;
+	qboolean	invalid = qfalse;
+	char		cleanName[MAX_NETNAME];
+	/* end added */
 
+
 	// discard leading spaces
 	for(; *in == ' '; in++);
 	
@@ -756,6 +762,18 @@
 			colorlessLen++;
 		}
 		
+		/* added beryllium */
+		/* don't allow nonprinting characters or (dead) console keys */
+		if ( *in < ' ' || *in > '}' || *in == '`' ) {
+			continue;
+		}
+
+		/* NOTE: \t is a somewhat valid character, maps to some strange char ingame */
+		if ( *in == ' ' ) {
+			totalWhitespace++;
+		}
+		/* end added */
+
 		outpos++;
 	}
 
@@ -772,7 +790,7 @@
 		invalid = qtrue;	
 	}
 
-	Q_strncpyz( cleanName, p, sizeof( cleanName ) );
+	Q_strncpyz( cleanName, out, sizeof( cleanName ) );
 	Q_CleanStr( cleanName );
 
 	/* Used to not print text to chat area, but console only */
@@ -799,7 +817,7 @@
 
 
 	if ( invalid ) {
-		Q_strncpyz( p, INVALID_PLAYERNAME_DEFAULT_S, outSize );
+		Q_strncpyz( out, INVALID_PLAYERNAME_DEFAULT_S, outSize );
 	}
 	/* end added */
 }
Index: Makefile
===================================================================
--- Makefile	(Revision 70)
+++ Makefile	(Arbeitskopie)
@@ -221,7 +221,7 @@
 
 # version info
 VERSION=1.5
-BERYLLIUM_VERSION=0.07b
+BERYLLIUM_VERSION=0.08a
 
 USE_SVN=
 ifeq ($(wildcard .svn),.svn)
